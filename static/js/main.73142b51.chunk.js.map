{"version":3,"sources":["components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","App.js","serviceWorker.js","index.js"],"names":["SignedInLinks","className","to","SignedOutLinks","Navbar","Notifications","ProjectSummary","ProjectList","Dashboard","Component","ProjectDetails","props","id","match","params","id_project","SignIn","state","email","password","handleSubmit","e","preventDefault","console","log","handleChange","setState","target","value","onSubmit","this","htmlFor","type","onChange","SignUp","firstName","lastName","CreateProject","title","content","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73142b51.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedInLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n        <li><NavLink to=\"/todo/create\" >New Project</NavLink> </li>\r\n        <li><NavLink to=\"/todo/\" >Log Out</NavLink> </li>\r\n        <li><NavLink to=\"/todo/\" className=\"btn btn-floating indigo lighten-1\">AvA</NavLink> </li>\r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedInLinks\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n        <li><NavLink to=\"/todo/signup\" >Signup</NavLink> </li>\r\n        <li><NavLink to=\"/todo/signin\" >Login</NavLink> </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper indigo darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/todo/\" className=\"brand-logo left\" >To Do List</Link>\r\n                <SignedInLinks />\r\n                <SignedOutLinks />\r\n            </div>\r\n            \r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst Notifications = () => {\r\n    return (\r\n        <div>\r\n            <p>Notifications</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React from \"react\";\r\n\r\nconst ProjectSummary = () => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">Project Title1</span>\r\n                <p>Project content text1</p>\r\n                <p className=\"grey-text\">date of posting</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\n\r\nconst ProjectList = () => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            <ProjectSummary />\r\n            <ProjectSummary />\r\n            <ProjectSummary />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\n\r\nexport default class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst ProjectDetails = (props) => {\r\n    const id = props.match.params.id_project\r\n    return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">NEW Project Title - {id}</span>\r\n                    <p>Lorem ipsum Project content text1 </p>\r\n                </div>\r\n                <div className=\"card-action indigo lighten-4 indigo-text text-darken-3\">\r\n                    <div>Posted by Autor's Name</div>\r\n                    <div>date of posting</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectDetails;\r\n","import React, { Component } from 'react'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import React, { Component } from 'react'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp\r\n","import React, { Component } from 'react'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className =\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} ></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateProject\r\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component { \n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Navbar />\n                    <Switch>\n                        <Route exact path=\"/todo/\" component={Dashboard} />\n                        <Route path=\"/todo/project/:id_project\" component={ProjectDetails} />\n                        <Route path=\"/todo/signin\" component={SignIn} />\n                        <Route path=\"/todo/signup\" component={SignUp} />\n                        <Route path=\"/todo/create\" component={CreateProject} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}